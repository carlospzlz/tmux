#!/bin/env bash

SESSION_NAME="psxle"
PSXLE_DIR="$1/psxle"
PSXLE_SRC_DIR="$PSXLE_DIR/src"
PSXLE_CORE_DIR="$PSXLE_DIR/libpcsxcore"
PSXLE_PLUGINS_DIR="$PSXLE_DIR/plugins"
PSXLE_GUI_DIR="$PSXLE_DIR/gui"

function initTmux {
    tmux new-session -s $SESSION_NAME -n console -d
    tmux send-keys -t $SESSION_NAME "cd $PSXLE_DIR" C-m
    tmux send-keys -t $SESSION_NAME "clear" C-m
}

function setWindows {
    # Vcs (git) window
    tmux new-window -n git -t $SESSION_NAME
    tmux send-keys -t $SESSION_NAME:1 "cd $PSXLE_DIR" C-m
    tmux send-keys -t $SESSION_NAME:1 "clear" C-m
    # Editor window
    tmux new-window -n edit -t $SESSION_NAME
    tmux send-keys -t $SESSION_NAME:2 "cd $PSXLE_SRC_DIR" C-m
    tmux send-keys -t $SESSION_NAME:2 "clear" C-m
    # pcsxr core window
    tmux new-window -n core -t $SESSION_NAME
    tmux send-keys -t $SESSION_NAME:3 "cd $PSXLE_CORE_DIR" C-m
    tmux send-keys -t $SESSION_NAME:3 "clear" C-m
    # pcsxr plugins window
    tmux new-window -n plugins -t $SESSION_NAME
    tmux send-keys -t $SESSION_NAME:4 "cd $PSXLE_PLUGINS_DIR" C-m
    tmux send-keys -t $SESSION_NAME:4 "clear" C-m
   # Go to console
    tmux select-window -t $SESSION_NAME:0
}

if [[ $# = 0 ]]
then
    echo "base dir?"
    exit
fi

if [[ ! -d $1 ]]
then
    echo $1?
    exit
fi

tmux info &> /dev/null && tmux has-session -t $SESSION_NAME
if [ $? != 0 ]
then
    initTmux
    setWindows
fi

tmux attach -t $SESSION_NAME
